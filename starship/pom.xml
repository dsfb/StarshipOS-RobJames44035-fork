<project xmlns="http://maven.apache.org/POM/4.0.0">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.starship</groupId>
    <artifactId>starship-os</artifactId>
    <version>0.1</version>
  </parent>
  <artifactId>kernel2</artifactId>
  <version>0.1</version>
  <packaging>pom</packaging>

  <properties>
    <cross-compiler-path>/home/rajames/PROJECTS/StarshipOS/gcc_elf/build/bin</cross-compiler-path>
    <bintools-path>/home/rajames/PROJECTS/StarshipOS/binutils/build/x86_64-elf/bin</bintools-path>
    <cc>${cross-compiler-path}/x86_64-elf-gcc</cc>
    <ld>${bintools-path}/ld</ld>
    <objcopy>${bintools-path}/objcopy</objcopy>
    <nasm>nasm</nasm>
    <kernel-ccflags>-Wall -c -ffreestanding -fno-pie -std=gnu99</kernel-ccflags>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>compile-and-link-kernel</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>-c</argument>
                <argument>
                  set -e

                  CC=${cc}
                  LD=${ld}
                  OBJCOPY=${objcopy}
                  NASM=${nasm}
                  KERNEL_CCFLAGS="${kernel-ccflags}"

                  # Assemble Multiboot header
                  $NASM -f elf64 kernel2/multiboot_header.asm -o kernel2/multiboot_header.o

                  # Compile kernel C source
                  $CC $KERNEL_CCFLAGS -o kernel2/kernel.o kernel2/kernel.c

                  # Link the kernel
                  $LD -o kernel2/kernel.elf -T kernel2/linker.ld kernel2/multiboot_header.o kernel2/kernel.o

                  # Create binary kernel
                  $OBJCOPY -O binary kernel2/kernel.elf kernel2/kernel.bin

                  # Copy and rename the kernel binary to ../starship
                  mkdir -p starship
                  cp kernel2/kernel.bin starship/starship
                </argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>clean-compiled-files</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>-c</argument>
                <argument>rm -rf kernel2/*.o kernel2/*.elf kernel2/*.bin</argument>
                <argument>rm -rf kernel/*.o kernel/*.elf kernel/*.bin</argument>
                <argument>rm -rf ./starship</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
